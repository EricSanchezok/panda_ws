<?xml version="1.0" ?>
<launch>
 
    <!-- GDB Debug Option -->
    <arg name="debug" default="false" />
    <arg unless="$(arg debug)" name="launch_prefix" value="" />
    <arg     if="$(arg debug)" name="launch_prefix"
            value="gdb -x $(dirname)/gdb_settings.gdb --ex run --args" />

    <!-- Verbose Mode Option -->
    <arg name="info" default="$(arg debug)" />
    <arg unless="$(arg info)" name="command_args" value="" />
    <arg     if="$(arg info)" name="command_args" value="--debug" />

    <!-- move_group settings -->
    <arg name="pipeline" default="ompl" />
    <arg name="allow_trajectory_execution" default="false"/>
    <arg name="max_safe_path_cost" default="1"/>
    <arg name="publish_monitored_planning_scene" default="true"/>


    <arg name="capabilities" default=""/>
    <arg name="disable_capabilities" default=""/>


    <!-- load URDF, SRDF and joint_limits configuration -->
    <include file="$(dirname)/planning_context.launch">
        <arg name="arm_id" value="$(arg arm_id)" />
        <arg name="use_gripper" value="$(arg use_gripper)" />
    </include>

    <!-- Start the actual move_group node/action server -->
    <node name="move_group" launch-prefix="$(arg launch_prefix)" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
        <!-- Set the display variable, in case OpenGL code is used internally -->
        <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

        <param name="allow_trajectory_execution" value="$(arg allow_trajectory_execution)"/>
        <param name="sense_for_plan/max_safe_path_cost" value="$(arg max_safe_path_cost)"/>
        <param name="default_planning_pipeline" value="$(arg pipeline)" />
        <param name="capabilities" value="$(arg capabilities)" />
        <param name="disable_capabilities" value="$(arg disable_capabilities)" />

        <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
        <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
        <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
        <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
        <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
    </node>


</launch>